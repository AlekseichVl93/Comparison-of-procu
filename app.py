# app.py
import os
import tempfile
import gradio as gr
import excel_summary_script as ess  # –≤–∞—à —Ñ–∞–π–ª

def run_build(input_file):
    if input_file is None:
        return None, "‚ö†Ô∏è –§–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.", gr.update(visible=False, value=None)

    try:
        wb = ess.build_summary_table(input_file.name)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å –ø–æ–Ω—è—Ç–Ω—ã–º –∏–º–µ–Ω–µ–º
        original_name = os.path.splitext(os.path.basename(input_file.name))[0]
        out_path = os.path.join(tempfile.gettempdir(), f"{original_name}_—Å–≤–æ–¥.xlsx")
        wb.save(out_path)

        return out_path, "‚úÖ –ì–æ—Ç–æ–≤–æ! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è.", gr.update(visible=True, value=out_path)
    except Exception as e:
        return None, f"‚ùå –û—à–∏–±–∫–∞: {e}", gr.update(visible=False, value=None)

with gr.Blocks(title="–°–≤–æ–¥ –ö–ü", css="""
    .yellow-button {background-color: #FFD700 !important; color: black !important; font-weight: bold !important;}
    .input-section {border: 2px solid #4CAF50; border-radius: 10px; padding: 20px; background-color: #f0f8f0;}
    .output-section {border: 2px solid #2196F3; border-radius: 10px; padding: 20px; background-color: #f0f4ff;}
    .info-section {border: 2px solid #FF9800; border-radius: 10px; padding: 20px; background-color: #fff8e1;}
""") as demo:
    gr.Markdown("## üìä –°–≤–æ–¥ –ö–ü –∏–∑ –≤—ã–≥—Ä—É–∑–∫–∏ –Ø–ó–∞–∫—É–ø–æ–∫ (YP)")
    
    with gr.Group(elem_classes="info-section"):
        gr.Markdown("""
        ### ‚ö†Ô∏è –í–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        
        1. **–ó–∞–≥—Ä—É–∂–∞–π—Ç–µ Excel, –≤—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π –∏–∑ –Ø–ó–∞–∫—É–ø–æ–∫ –ë–ï–ó –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –Ω–µ–º**
        2. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–æ–ª—å–∫–æ –≤—ã–≥—Ä—É–∂–µ–Ω–Ω—ã–π Excel. –ï—Å–ª–∏ –ö–ü –Ω–µ –ø–æ–ø–∞–ª–∏ –≤ Excel, —Ç–æ –∏—Ö –∏ –Ω–µ –±—É–¥–µ—Ç –≤ —Å–≤–æ–¥–µ
        3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω—ã –≤ —Ä—É–±–ª—è—Ö, –æ–¥–Ω–∞–∫–æ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞–≥—Ä—É–∂–∞—Ç—å –≤ –Ω–µ–µ –ª—é–±—É—é –≤–∞–ª—é—Ç—É. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –±—É–¥–µ—Ç –≤—Ä—É—á–Ω—É—é –∏–∑–º–µ–Ω–∏—Ç—å –≤–∞–ª—é—Ç—É –≤ Excel
        4. **–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –ø–æ–∑–∏—Ü–∏–π –≤ –ø–µ—Ä–µ—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Å–≤–æ–¥–µ**
        """)
    
    with gr.Group(elem_classes="input-section"):
        gr.Markdown("### üì• –®–∞–≥ 1: –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª")
        file_in = gr.File(label="–í—ã–±–µ—Ä–∏—Ç–µ Excel —Ñ–∞–π–ª (.xlsx)", file_types=[".xlsx"])
        run_btn = gr.Button("‚ñ∂Ô∏è –°–æ–±—Ä–∞—Ç—å —Å–≤–æ–¥", elem_classes="yellow-button", size="lg")
    
    status = gr.Textbox(label="–°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏", interactive=False)
    
    with gr.Group(elem_classes="output-section"):
        gr.Markdown("### üì§ –®–∞–≥ 2: –°–∫–∞—á–∞–π—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
        file_out = gr.File(label="–ì–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª", elem_id="file_out")
        download_btn = gr.DownloadButton("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", elem_classes="yellow-button", size="lg", visible=False)

    run_btn.click(
        run_build,
        inputs=file_in,
        outputs=[file_out, status, download_btn]
    )

if __name__ == "__main__":
    demo.launch()
