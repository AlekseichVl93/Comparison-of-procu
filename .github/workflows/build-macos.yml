name: Build macOS App (PyInstaller - simple)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Create venv and install dependencies
        shell: bash
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          pip install pyinstaller

      - name: Build with PyInstaller (collect-all for known packages)
        shell: bash
        run: |
          source venv/bin/activate
          # Если у вас другое имя файла-старта, замените app.py ниже
          pyinstaller --onefile --name MyApp \
            --collect-all gradio \
            --collect-all gradio_client \
            --collect-all safehttpx \
            --collect-all groovy \
            --collect-all flask \
            --collect-all openpyxl \
            app.py

      - name: Show dist contents
        shell: bash
        run: |
          echo "dist listing:"
          ls -la dist || true

      - name: Archive dist and upload artifact
        shell: bash
        run: |
          mkdir -p release
          cd dist || exit 0
          zip -r ../release/MyApp-macos.zip . || true
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-macos
          path: release/MyApp-macos.zip
